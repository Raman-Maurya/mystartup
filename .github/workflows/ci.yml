name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: [6.0]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run backend tests
      run: npm test
    
    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage
        path: coverage/
  
  frontend-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './client/package-lock.json'
    
    - name: Install frontend dependencies
      run: |
        cd client
        npm ci
    
    - name: Run frontend tests
      run: |
        cd client
        npm run test
    
    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage
        path: client/coverage/

  e2e-test:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: [6.0]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    
    - name: Install dependencies
      run: |
        npm ci
        cd client
        npm ci
    
    - name: Build frontend
      run: |
        cd client
        npm run build
    
    - name: Run E2E tests
      run: |
        npm run dev & npx wait-on http://localhost:5173
        cd client
        npm run test:e2e
    
    - name: Upload Cypress videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-videos
        path: client/cypress/videos/

  build:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd client
        npm ci
    
    - name: Build frontend
      run: |
        cd client
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: client/dist/
